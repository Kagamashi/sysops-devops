# REPOSITORIES

# Refer to external Git repositories where Kubernetes manifests/Helm charts/Kustomize configurations for applications are stored.
# ArgoCD continuously monitors these repositories and syncs the application state from the repositories to Kubernetes cluster. 
# Repositories in ArgoCD can be either private or public and credentials for private repositories need to be securely stored in Kubernetes Secrets

apiVersion: v1
kind: Secret
metadata:
  name: my-git-repo-secret  # The name of the secret (used to reference the repository in ArgoCD)
  namespace: argocd  # The namespace where ArgoCD is installed
  labels:
    argocd.argoproj.io/secret-type: repository  # Label indicating that this secret contains repository credentials
data:
  # Repository URL (base64-encoded)
  url: aHR0cHM6Ly9naXRodWIuY29tL215LW9yZy9teS1hcHAtcmVwbw==  # Base64-encoded repository URL (e.g., https://github.com/my-org/my-app-repo.git)

  # Authentication method (HTTPS with username and password)
  username: Z2l0aHViLXVzZXJuYW1l  # Base64-encoded username for the repository (e.g., GitHub username)
  password: Z2l0aHViLXBhdA==  # Base64-encoded password or personal access token (PAT)

  # Alternatively, you can use SSH authentication
  sshPrivateKey: |  # Base64-encoded SSH private key for accessing the repository
    LS0tLS1CRUdJTiBJTlR...

---

# metadata.name: The name of the secret, used to reference the repository in ArgoCD. Each secret is typically tied to one repository.
# metadata.namespace: The namespace where ArgoCD is installed, usually argocd.
# labels.argocd.argoproj.io/secret-type: repository: A required label to indicate that this secret contains repository credentials. ArgoCD will use this label to identify the secret as a repository configuration.
# data.url: The base64-encoded URL of the Git or Helm repository. This can be a Git repository URL (e.g., https://github.com/my-org/my-app-repo.git) or a Helm repository URL (e.g., https://charts.helm.sh/stable).
# data.username: (Optional) The base64-encoded username for HTTPS authentication. This is typically used for accessing private repositories with username/password or personal access tokens (PATs).
# data.password: (Optional) The base64-encoded password or personal access token (PAT) for HTTPS authentication.
# data.sshPrivateKey: (Optional) The base64-encoded SSH private key for accessing the repository via SSH. This is commonly used for private Git repositories where SSH-based authentication is preferred.
