apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "fullname" . }}-postgresql
spec:
  serviceName: {{ include "fullname" . }}-postgresql-headless
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "fullname" . }}-postgresql
  template:
    metadata:
      labels:
        app: {{ include "fullname" . }}-postgresql
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . }}-postgres-auth
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . }}-postgres-auth
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: {{ include "fullname" . }}-postgres-auth
              key: POSTGRES_DB
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "{{ .Values.auth.username }}"]
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "{{ .Values.auth.username }}"]
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ include "fullname" . }}-postgresql
