# Secret
# Used to store sensitive information such as: passwords, OAuth tokens, SSH keys, API keys...
# Secrets are encoded in base64 but are not encrypted by default. 

# Secret types: 
#   Opaque: The default type for arbitrary user-defined data.
#   tls: Stores SSL/TLS certificates and keys.
#   docker-registry: Stores Docker credentials for pulling images from private registries.
#   service-account-token: Automatically created for Kubernetes service accounts.

# Usage of secrets:
#   Environment Variables: Secrets can be injected into Pods as environment variables.
#   Volume Mounts: Secrets can be mounted into Pods as files on the filesystem.
#   Image Pull Secrets: Secrets can be used to pull private container images.

# Decode value from secret:
echo 'YWRtaW4=' | base64 --decode

--- 

apiVersion: v1  # API version for Secrets
kind: Secret    # Defines this resource as a Secret
metadata:
  name: my-secret  # Name of the Secret
  labels:          # Optional labels for organizing resources
    app: my-app
type: Opaque       # Type of Secret (Opaque is the default)
data:              # Data block contains base64-encoded key-value pairs
  username: YWRtaW4=    # Base64-encoded value of "admin"
  password: MWYyZDFlMmU2N2Rm  # Base64-encoded value of "1f2d1e2e67df"

---
# To create a TLS Secret, use this structure instead:
type: kubernetes.io/tls
data:
  tls.crt: <base64-encoded certificate>
  tls.key: <base64-encoded key>

---
# To create a docker-registry Secret, use this structure:
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: <base64-encoded docker config JSON>

--- 

# Secrets as Environment Variables
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
    - name: my-container
      image: nginx
      env:
        - name: SECRET_USERNAME
          valueFrom:
            secretKeyRef:
              name: my-secret  # Name of the Secret
              key: username    # Key to reference from the Secret
        - name: SECRET_PASSWORD
          valueFrom:
            secretKeyRef:
              name: my-secret
              key: password

---

# Secrets as Volume Mounts
apiVersion: v1
kind: Pod
metadata:
  name: my-pod
spec:
  containers:
    - name: my-container
      image: nginx
      volumeMounts:
        - name: secret-volume
          mountPath: "/etc/secrets"  # Mount the Secret to this path
          readOnly: true
  volumes:
    - name: secret-volume
      secret:
        secretName: my-secret  # Name of the Secret
# 2 files will be created at /etc/secrets directory
# /etc/secrets/username: Contains the base64-decoded value of the username key.
# /etc/secrets/password: Contains the base64-decoded value of the password key.

---

# Example TLS Secret
apiVersion: v1
kind: Secret
metadata:
  name: my-tls-secret
type: kubernetes.io/tls  # Specific type for TLS secrets
data:
  tls.crt: <base64-encoded-cert>   # Base64-encoded TLS certificate
  tls.key: <base64-encoded-key>    # Base64-encoded private key

---

# Example Docker Registry Secret
apiVersion: v1
kind: Secret
metadata:
  name: my-docker-secret
type: kubernetes.io/dockerconfigjson  # Type for Docker registry secrets
data:
  .dockerconfigjson: <base64-encoded-docker-config>
